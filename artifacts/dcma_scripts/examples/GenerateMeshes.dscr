#!/usr/bin/env -S dicomautomaton_dispatcher -v

res = "0.25, 0.25, 0.75";

GenerateMeshes(
    MeshLabel = 'sphere(7.0)',
    Objects = 'sphere(7.0)',
    Resolution = res,
){};

GenerateMeshes(
    MeshLabel = 'sphere(2.0)',
    Objects = 'sphere(2.0)',
    Resolution = res,
){};

GenerateMeshes(
    MeshLabel = 'box',
    Objects = 'aa_box(1.0, 2.0, 4.0)',
    Resolution = res,
){};

GenerateMeshes(
    MeshLabel = 'sphere + sphere',
    Objects = 'join(){ sphere(5.0);
                       translate(8.0, 8.0, 8.0){ 
                           sphere(5.0)
                       }
               }',
    Resolution = res,
){};


GenerateMeshes(
    MeshLabel = 'sphere + box',
    Objects = 'join(){ sphere(2.0); aa_box(1.0, 5.0, 5.0) }',
    Resolution = res,
){};

GenerateMeshes(
    MeshLabel = 'box + sphere',
    Objects = 'join(){ aa_box(1.0, 5.0, 5.0); sphere(2.0) }',
    Resolution = res,
){};

GenerateMeshes(
    MeshLabel = 'box + sphere',
    Objects = 'join(){ aa_box(5.0, 5.0, 1.0); sphere(2.0) }',
    Resolution = res,
){};

GenerateMeshes(
    MeshLabel = 'box - sphere',
    Objects = 'subtract(){ aa_box(1.0, 5.0, 5.0); sphere(2.5) }',
    Resolution = res,
){};

GenerateMeshes(
    MeshLabel = 'sphere - box',
    Objects = 'subtract(){ sphere(20.0); aa_box(10.0, 50.0, 50.0) }',
    Resolution = res,
){};

GenerateMeshes(
    MeshLabel = 'chamfered sphere - box',
    Objects = 'chamfer_subtract(2.0){ sphere(20.0); aa_box(10.0, 50.0, 50.0) }',
    Resolution = res,
){};

